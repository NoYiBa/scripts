#!/opt/sensu/embedded/bin/ruby
#
# Quis custodiet ipsos custodes?
#
# Basic monitoring of Sensu via the APi. Meant to be run as a cron job.
#
# Requirements: sensu > 0.10.x
#
# Written by Jean-Francois Theroux <me@failshell.io>

require 'fileutils'
require "json"
require "net/http"
require 'socket'

attempts = 0
fqdn = Socket.gethostname
lock = '/tmp/sensu-basic-mon.lock'
mtime = File.mtime('/tmp/sensu-basic-mon.lock').to_i
now = Time.now.to_i
diff = mtime + 900

# Lock, don't want to run more than one at a time
if now > diff
  FileUtils.rm_f(lock)
end
if File.exists?(lock)
  exit 1
end
FileUtils.touch(lock)

# Test the API
begin
  res = Net::HTTP.get_response(URI("http://localhost:4567/info"))

  errors = 0
  errors_types = Array.new

  if JSON.parse(res.body)["redis"]["connected"] == false
    errors = errors + 1
    errors_types << 'Redis'
  end

  if JSON.parse(res.body)["rabbitmq"]["connected"] == false
    errors = errors + 1
    errors_types << 'RabbitMQ'
  end

  if errors > 0
    raise
  end
rescue Errno::ECONNREFUSED
  if attempts < 3
    attempts = attempts + 1
    sleep(Random.rand(50...70))
    retry
  end
  puts "Couldn't connect to Sensu's API on #{fqdn}! 3 failed retries of 60 seconds."
rescue Exception
  if attempts < 3
    attempts = attempts + 1
    sleep(Random.rand(50...70))
    retry
  end
  errors_types.each {|e| puts "Sensu on #{fqdn} isn't connected to #{e}! 3 failed retries of 60 seconds."}
end

# Remove lock
FileUtils.rm(lock)
